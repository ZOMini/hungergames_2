version: "3.2"
services:
  monitor_db:
    image: postgres:14.7-alpine
    container_name: monitor_db
    environment: 
      POSTGRES_DB: monitor_db
      POSTGRES_USER: app
      POSTGRES_PASSWORD: 123qwe
    volumes:
      - monitor_db_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    restart: always
    networks:
      - monitor_nw

  monitor_redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - monitor_nw

  monitor:
    build: 
      context: ./monitor
      dockerfile: Dockerfile
    container_name: monitor
    image: monitor_image
    command: bash -c "flask db upgrade && gunicorn -b :5000 --worker-class gevent app:app"
    volumes:
      - logs:/monitor/logs
    depends_on:
      - monitor_db
    healthcheck:
        test: ["CMD", "curl", "-f", "http://monitor_db:5432"]
        interval: 2s
        timeout: 2s
        retries: 10
    networks:
      - monitor_nw
    restart: on-failure

  monitor_celery:
    container_name: monitor_celery
    image: monitor_image
    command: bash -c "celery -A app_celery.tasks worker -P gevent --loglevel=INFO"
    volumes:
      - logs:/monitor/logs
    depends_on:
      - monitor_db
    networks:
      - monitor_nw
    restart: on-failure

  monitor_worker:
    container_name: monitor_worker
    image: monitor_image
    command: bash -c "python worker.py"
    volumes:
      - logs:/monitor/logs
    depends_on:
      - monitor_db
    networks:
      - monitor_nw
    restart: on-failure

  monitor_tests:
    container_name: monitor_tests
    image: monitor_image
    entrypoint: >
      sh -c "pytest --disable-warnings"
    volumes:
      - logs:/monitor/logs
    depends_on:
      - monitor_db
      - monitor
      - monitor_celery
      - monitor_worker
      - monitor_redis
    healthcheck:
        test: ["CMD", "curl", "-f", "http://monitor:5000"]
        interval: 2s
        timeout: 2s
        retries: 5
    networks:
      - monitor_nw

  nginx:
    container_name: nginx
    image: nginx:1.20.1-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - monitor
    networks:
      - monitor_nw
    restart: always

volumes:
  monitor_db_data:
  redis_data:
  logs:

networks:
  monitor_nw:
    driver: bridge